<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
<!--
%%
Description:
  A MONITOR which runs a timed PowerShell script and inspects a FilePath for files where the count exceeds a threshold
  CompanyID - is a short abbreviation for your company with NO SPACES OR SPECIAL CHARACTERS ALLOWED
  AppName - is a short name for your app with NO SPACES OR SPECIAL CHARACTERS ALLOWED  
  ClassID - is the targeted class such as your custom class or Windows!Microsoft.Windows.Server.OperatingSystem  
  MonitorName   -  Discriptive name for the monitor  such as "CheckCert"
  UniqueID - Is a unique short description of the monitor purpose (NO SPACES OR SPECIAL CHARACTERS ALLOWED) such as "CheckCertAge"
  IntervalSeconds - How often the script should run  
  FilePath - a Local or UNC path to search such as C:\TEST\Folder or \\servername\sharename\TEST\Folder
  WarningThreshold - The number of days needed to breach the Warning threshold but below the Critical threshold
  CriticalThreshold - The number of days needed to breach the Critical threshold
  MonitorName   -  Discriptive name for the monitor
  
Version: 1.0
LastModified: 06-Jan-2022
%%

In this fragment you need to replace:
  ##CompanyID##
  ##AppName##
  ##ClassID##
  ##UniqueID##
  ##MonitorName##   (discriptive name for the monitor)
  ##IntervalInSeconds## 
  ##SyncTime##
  ##FilePath##
  ##WarningThreshold##  (number)
  ##CriticalThreshold##  (number)


	
This fragment depends on references:  
  RequiredReference: Alias="System", ID="System.Library"
  RequiredReference: Alias="Windows", ID="Microsoft.Windows.Library"
  RequiredReference: Alias="Health", ID="System.Health.Library"
  
@@Author=Kevin Holman@@ @Modified By PG Moore@   
--> 
	<TypeDefinitions>
		<ModuleTypes>
			<DataSourceModuleType ID="##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor.DS" Accessibility="Internal" Batching="false">
				<Configuration>
					<xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema"></xsd:element>
					<xsd:element minOccurs="0" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema"></xsd:element>
					<xsd:element minOccurs="1" name="ThresholdForWarning" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema"></xsd:element>
					<xsd:element minOccurs="1" name="ThresholdForCritical" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema"></xsd:element>
					<xsd:element minOccurs="1" name="FilePath" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema"></xsd:element>					
					<xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema"></xsd:element>
				</Configuration>
				<OverrideableParameters>
					<OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
					<OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
					<OverrideableParameter ID="ThresholdForWarning" Selector="$Config/ThresholdForWarning$" ParameterType="int" />
					<OverrideableParameter ID="ThresholdForCritical" Selector="$Config/ThresholdForCritical$" ParameterType="int" />
					<OverrideableParameter ID="FilePath" Selector="$Config/FilePath$" ParameterType="string" />	
					<OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
				</OverrideableParameters>
				<ModuleImplementation Isolation="Any">
					<Composite>
						<MemberModules>
							<DataSource ID="Scheduler" TypeID="System!System.Scheduler">
								<Scheduler>
									<SimpleReccuringSchedule>
										<Interval Unit="Seconds">$Config/IntervalSeconds$</Interval>
										<SyncTime>$Config/SyncTime$</SyncTime>
									</SimpleReccuringSchedule>
									<ExcludeDates></ExcludeDates>
								</Scheduler>
							</DataSource>
							<ProbeAction ID="PA" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagTriggerOnlyProbe">
								<ScriptName>##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor.DS.ps1</ScriptName>
								<ScriptBody>
									param([int]$ThresholdForCritical,[int]$ThresholdForWarning,[string]$FilePath)


									# Constants section - modify stuff here:
									#=================================================================================
									# Assign script name variable for use in event logging.
									$ScriptName = "##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor.DS.ps1"
									$EventID = "8676"
									#=================================================================================


									# Starting Script section - All scripts get this
									#=================================================================================
									# Gather the start time of the script
									$StartTime = Get-Date
									#Set variable to be used in logging events
									$whoami = whoami
									# Load MOMScript API
									$momapi = New-Object -comObject MOM.ScriptAPI
									# Load PropertyBag function
									$bag = $momapi.CreatePropertyBag()
									#=================================================================================


									# Begin MAIN script section
									#=================================================================================
									#Log script event that we are starting task
									$momapi.LogScriptEvent($ScriptName,$EventID,0,"`nScript is starting. `nFilePath: ($FilePath) `nThresholdForWarning: ($ThresholdForWarning) `nRunning as ($whoami).")

									# Test to see if the folder exists and exit with error if not
									IF (!(Test-Path $FilePath))
									{
									$momapi.LogScriptEvent($ScriptName,$EventID,0,"FATAL ERROR:  The expected folder ($FilePath) was not found.")
									[int]$ExpiryInDays = 0
									$hostname = hostname
									$bag.AddValue('Hostname',$hostname)
									$bag.AddValue('Message','The Certificate is not in the expected location.')
									$bag.AddValue('FilePath',$FilePath)
									$bag.AddValue('ThresholdForWarning',$ThresholdForWarning)
									$bag.AddValue('ThresholdForCritical',$ThresholdForCritical)
									$bag.AddValue('Result',$ExpiryInDays)
									# Return all bags
									$bag
									EXIT
									}

									$hostname = hostname
									$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate
									$cert.Import("$filePath")
									$cert.GetEffectiveDateString()
									$expiry = $cert.GetExpirationDateString()
									$dateToCheck = Get-Date "$expiry"
									$today = Get-Date
									$differenceInDays = ($dateToCheck - $today).Days

									# Clear any previous errors
									$Error.Clear()

									# End of main script section

									[int]$ExpiryInDays = $differenceInDays


									#Values to Evaluate if number of Days of expiry is greater or equal to our threshold

									$bag.AddValue('Result',$ExpiryInDays)
									$bag.AddValue('FilePath',$FilePath)
									$bag.AddValue('ThresholdForWarning',$ThresholdForWarning)
									$bag.AddValue('ThresholdForCritical',$ThresholdForCritical)
									$bag.AddValue('Message','The Certificate is in the expected location.')
									$bag.AddValue('hostname',$hostname)

									# Return all bags
									$bag

									# End of script section
									#=================================================================================
									#Log an event for script ending and total execution time.
									$EndTime = Get-Date
									$ScriptTime = ($EndTime - $StartTime).TotalSeconds
									$momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Script Completed. `n Script Runtime: ($ScriptTime) seconds.")
									#=================================================================================
									# End of script

								</ScriptBody>
								<Parameters>
									<Parameter>
										<Name>ThresholdForWarning</Name>
										<Value>$Config/ThresholdForWarning$</Value>									
									</Parameter>
									<Parameter>
										<Name>ThresholdForCritical</Name>
										<Value>$Config/ThresholdForCritical$</Value>
									</Parameter>									
									<Parameter>
										<Name>FilePath</Name>
										<Value>$Config/FilePath$</Value>									
									</Parameter>									
								</Parameters>
								<TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
							</ProbeAction>
						</MemberModules>
						<Composition>
							<Node ID="PA">
								<Node ID="Scheduler" />
							</Node>
						</Composition>
					</Composite>
				</ModuleImplementation>
				<OutputType>System!System.PropertyBagData</OutputType>
			</DataSourceModuleType>
		</ModuleTypes>
		<MonitorTypes>
			<UnitMonitorType ID="##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor.MonitorType" Accessibility="Internal">
				<MonitorTypeStates>
					<MonitorTypeState ID="GoodCondition" NoDetection="false" />
					<MonitorTypeState ID="BadCondition" NoDetection="false" />
					<MonitorTypeState ID="CriticalCondition" NoDetection="false" />					
				</MonitorTypeStates>
				<Configuration>
					<xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema"></xsd:element>
					<xsd:element minOccurs="0" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema"></xsd:element>
					<xsd:element minOccurs="1" name="ThresholdForWarning" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema"></xsd:element>
					<xsd:element minOccurs="1" name="ThresholdForCritical" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema"></xsd:element>
					<xsd:element minOccurs="1" name="FilePath" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema"></xsd:element>					
					<xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema"></xsd:element>
				</Configuration>
				<OverrideableParameters>
					<OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
					<OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
					<OverrideableParameter ID="ThresholdForWarning" Selector="$Config/ThresholdForWarning$" ParameterType="int" />
					<OverrideableParameter ID="ThresholdForCritical" Selector="$Config/ThresholdForCritical$" ParameterType="int" />					
					<OverrideableParameter ID="FilePath" Selector="$Config/FilePath$" ParameterType="string" />	
					<OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
				</OverrideableParameters>
				<MonitorImplementation>
					<MemberModules>
						<DataSource ID="DS" TypeID="##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor.DS">
							<IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
							<SyncTime>$Config/SyncTime$</SyncTime>
							<ThresholdForWarning>$Config/ThresholdForWarning$</ThresholdForWarning>
							<ThresholdForCritical>$Config/ThresholdForCritical$</ThresholdForCritical>							
							<FilePath>$Config/FilePath$</FilePath>
							<TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
						</DataSource>
						<ConditionDetection ID="GoodConditionFilter" TypeID="System!System.ExpressionFilter">
							<Expression>
								<SimpleExpression>
									<ValueExpression>
										<XPathQuery Type="Integer">Property[@Name='Result']</XPathQuery>
									</ValueExpression>
									<Operator>GreaterEqual</Operator>
									<ValueExpression>
										<Value Type="Integer">$Config/ThresholdForWarning$</Value>
									</ValueExpression>
								</SimpleExpression>
							</Expression>
						</ConditionDetection>
						<ConditionDetection ID="BadConditionFilter" TypeID="System!System.ExpressionFilter">
							<Expression>
								<And>
							<Expression>
								<SimpleExpression>
									<ValueExpression>
										<XPathQuery Type="Integer">Property[@Name='Result']</XPathQuery>
									</ValueExpression>
									<Operator>Less</Operator>
									<ValueExpression>
										<Value Type="Integer">$Config/ThresholdForWarning$</Value>
									</ValueExpression>
								</SimpleExpression>
							</Expression>
							<Expression>
								<SimpleExpression>
									<ValueExpression>
										<XPathQuery Type="Integer">Property[@Name='Result']</XPathQuery>
									</ValueExpression>
									<Operator>GreaterEqual</Operator>
									<ValueExpression>
										<Value Type="Integer">$Config/ThresholdForCritical$</Value>
									</ValueExpression>
								</SimpleExpression>
							</Expression>
								</And>									
									</Expression>

						</ConditionDetection>		
       					<ConditionDetection ID="CriticalConditionFilter" TypeID="System!System.ExpressionFilter">
						<Expression>
							<SimpleExpression>
								<ValueExpression>
									<XPathQuery Type="Integer">Property[@Name='Result']</XPathQuery>
								</ValueExpression>
								<Operator>Less</Operator>
								<ValueExpression>
									<Value Type="Integer">$Config/ThresholdForCritical$</Value>
								</ValueExpression>
							</SimpleExpression>
						</Expression>
					</ConditionDetection>	
				
					</MemberModules>
					<RegularDetections>
						<RegularDetection MonitorTypeStateID="GoodCondition">
							<Node ID="GoodConditionFilter">
								<Node ID="DS" />
							</Node>
						</RegularDetection>
						<RegularDetection MonitorTypeStateID="BadCondition">
							<Node ID="BadConditionFilter">
								<Node ID="DS" />
							</Node>
						</RegularDetection>
						<RegularDetection MonitorTypeStateID="CriticalCondition">
							<Node ID="CriticalConditionFilter">
								<Node ID="DS" />
							</Node>
						</RegularDetection>						
					</RegularDetections>
					<OnDemandDetections>
						<OnDemandDetection MonitorTypeStateID="GoodCondition">
							<Node ID="GoodConditionFilter">
								<Node ID="DS" />
							</Node>
						</OnDemandDetection>
						<OnDemandDetection MonitorTypeStateID="BadCondition">
							<Node ID="BadConditionFilter">
								<Node ID="DS" />
							</Node>
						</OnDemandDetection>
						<OnDemandDetection MonitorTypeStateID="CriticalCondition">
							<Node ID="CriticalConditionFilter">
								<Node ID="DS" />
							</Node>
						</OnDemandDetection>						
					</OnDemandDetections>
				</MonitorImplementation>
			</UnitMonitorType>
		</MonitorTypes>
	</TypeDefinitions>
	<Monitoring>
		<Monitors>
			<UnitMonitor ID="##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor" Accessibility="Public" Enabled="true" Target="##ClassID##" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor.MonitorType" ConfirmDelivery="true">
				<Category>AvailabilityHealth</Category>
				<AlertSettings AlertMessage="##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor.AlertMessage">
					<AlertOnState>Warning</AlertOnState>
					<AutoResolve>true</AutoResolve>
					<AlertPriority>Normal</AlertPriority>
					<AlertSeverity>MatchMonitorHealth</AlertSeverity>
					<AlertParameters>
						<AlertParameter1>$Data/Context/Property[@Name='Result']$</AlertParameter1>
						<AlertParameter2>$Data/Context/Property[@Name='Message']$</AlertParameter2>
						<AlertParameter3>$Data/Context/Property[@Name='FilePath']$</AlertParameter3>
						<AlertParameter4>$Data/Context/Property[@Name='ThresholdForWarning']$</AlertParameter4>
						<AlertParameter5>$Data/Context/Property[@Name='ThresholdForCritical']$</AlertParameter5>
						<AlertParameter6>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</AlertParameter6>										
					</AlertParameters>					
				</AlertSettings>
				<OperationalStates>
					<OperationalState ID="GoodCondition" MonitorTypeStateID="GoodCondition" HealthState="Success" />
					<OperationalState ID="BadCondition" MonitorTypeStateID="BadCondition" HealthState="Warning" />
					<OperationalState ID="CriticalCondition" MonitorTypeStateID="CriticalCondition" HealthState="Error" />					
				</OperationalStates>
				<Configuration>
					<IntervalSeconds>##IntervalInSeconds##</IntervalSeconds>
					<SyncTime>##SyncTime##</SyncTime>
					<ThresholdForWarning>##WarningThreshold##</ThresholdForWarning>
					<ThresholdForCritical>##CriticalThreshold##</ThresholdForCritical>					
					<FilePath>##FilePath##</FilePath>
					<TimeoutSeconds>120</TimeoutSeconds>
				</Configuration>
			</UnitMonitor>
		</Monitors>
	</Monitoring>
  <Presentation>
    <StringResources>
      <StringResource ID="##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor.AlertMessage" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor">
          <Name>##CompanyID## ##AppName## SHORT CERT Monitor</Name>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor" SubElementID="GoodCondition">
          <Name>GoodCondition</Name>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor" SubElementID="BadCondition">
          <Name>BadCondition</Name>
        </DisplayString>
		  <DisplayString ElementID="##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor" SubElementID="CriticalCondition">
			  <Name>CriticalCondition</Name>
		  </DisplayString>		  
        <DisplayString ElementID="##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor.AlertMessage">
          <Name>##CompanyID## ##AppName## #what is the# Error</Name>
          <Description>
			  ##CompanyID## ##AppName## #counter for# {0} days on server {5}.
			  Hostname: {5}
			  Message: {1}
			  Certificate location: {2}
			  The threshold for the warning alert is: {3}
			  The threshold for the critical alert is: {4}
		  </Description>
        </DisplayString>		
      </DisplayStrings>
		<KnowledgeArticles>
			<KnowledgeArticle ElementID="##CompanyID##.##AppName##.##UniqueID##.##MonitorName##.Monitor" Visible="true">
				<MamlContent>
					<maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
						<maml:title>Summary</maml:title>
						<maml:para>
							#information#.
							#information#.
						</maml:para>
					</maml:section>
					<maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
						<maml:title>Causes</maml:title>
						<maml:para>The #what ever is needed# is either missing or the expiry date is below the acceptable threshold. </maml:para>
					</maml:section>
					<maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
						<maml:title>Resolutions</maml:title>
						<maml:para>
							#Tell us what to do 
							#Steps to take#.
							#who should be notified?#
							#BlaBla what action to take#
						</maml:para>
					</maml:section>
				</MamlContent>
			</KnowledgeArticle>
		</KnowledgeArticles>		
    </LanguagePack>
  </LanguagePacks>
</ManagementPackFragment>
